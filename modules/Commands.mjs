
/**
 * @typedef {{}} ModuleMethods
 * @typedef {{"privileged_users":"s."}} Variables
 */

/**@type {import('mongodb').Collection} */
let mongo = null;

/**@type {import('../types').Module<ModuleMethods, import('../autoGeneratedTypes.mjs').SharedMethods, Variables>} */
export default {
    name: 'commands',
    requiredVariables: {
        "privileged_users":"s."
    },
    async prepared(mm, client) {
        mongo = mm['core'].getMongo().db('GBot').collection('commands');
        await new Promise(ok => setTimeout(ok, 5000));
    },
    messageBehavor: 'active',
    async messageBehavorCallback(channel, tags, msg, self, client, ctx, mm) {
        if (msg.startsWith('!pivo')) client.say(channel, '1234');
    }
}
